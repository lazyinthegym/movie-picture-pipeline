name: Backend Continuous Deployment

on:
  push:
    branches:
      - master
    paths:
      - 'app/backend/**'
  workflow_dispatch:

defaults:
  run:
    working-directory: app/backend

env:
  PYTHON_VERSION: '3.x'
  ECR_REPOSITORY: 'movie-backend'
  AWS_REGION: 'us-east-1'

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install pipenv
        run: pip install pipenv

      - name: Install dependencies
        run: pipenv install --dev

      - name: Run lint
        run: pipenv run lint

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install pipenv
        run: pip install pipenv

      - name: Install dependencies
        run: pipenv install

      - name: Run tests
        run: pipenv run test

  build-and-deploy:
    name: Build Docker Image, Push to ECR, and Deploy to Kubernetes
    needs: [lint, test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker Image
        run: docker build --build-arg REACT_APP_MOVIE_API_URL=${{ env.REACT_APP_MOVIE_API_URL }} -t ${{ env.ECR_REPOSITORY }}:${{ github.sha }} .

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Set ECR Registry URL
        run: echo "ECR_REGISTRY_URL=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com" >> $GITHUB_ENV

      - name: Tag Docker Image
        run: docker tag ${{ env.ECR_REPOSITORY }}:${{ github.sha }} ${{ env.ECR_REGISTRY_URL }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}

      - name: Push Docker Image to ECR
        run: docker push ${{ env.ECR_REGISTRY_URL }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: 'latest'

      - name: Update kubeconfig for EKS
        run: aws eks --region us-east-1 update-kubeconfig --name cluster

      - name: Debug image url
        run: |
          echo ${{ env.ECR_REGISTRY_URL }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}
        
      - name: Deploy to Kubernetes
        run: |
          cd k8s
          kustomize edit set image backend=${{ env.ECR_REGISTRY_URL }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}
          kustomize build | kubectl apply -f -
