name: CI Pipeline

on:
  pull_request:
  workflow_dispatch:

defaults:
  run:
    working-directory: ./app/frontend

env:
  NODE_VERSION: '18'

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup NodeJS
      uses: actions/setup-node@v4.0.3
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Cache Node Modules
      uses: actions/cache@v3
      with:
        path: ./app/frontend/node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('./app/frontend/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install Dependencies
      run: npm ci

    - name: Run Lint
      run: npm run lint

  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup NodeJS
      uses: actions/setup-node@v4.0.3
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Cache Node Modules
      uses: actions/cache@v3
      with:
        path: ./app/frontend/node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('./app/frontend/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install Dependencies
      run: npm ci

    - name: Run Tests
      run: CI=true npm test

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: [lint, test]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup NodeJS
      uses: actions/setup-node@v4.0.3
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Cache Node Modules
      uses: actions/cache@v3
      with:
        path: ./app/frontend/node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('./app/frontend/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install Dependencies
      run: npm ci

    - name: Build with Docker
      run: docker build -t movie-frontend .
